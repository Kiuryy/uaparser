// Code generated by "stringer -type=DeviceType,BrowserName,OSName,Platform -output=vars/const_string.go vars/const.go"; DO NOT EDIT.

package vars

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DeviceUnknown-0]
	_ = x[DeviceComputer-1]
	_ = x[DeviceTablet-2]
	_ = x[DevicePhone-3]
	_ = x[DeviceConsole-4]
	_ = x[DeviceTV-5]
}

const _DeviceType_name = "DeviceUnknownDeviceComputerDeviceTabletDevicePhoneDeviceConsoleDeviceTV"

var _DeviceType_index = [...]uint8{0, 13, 27, 39, 50, 63, 71}

func (i DeviceType) String() string {
	if i < 0 || i >= DeviceType(len(_DeviceType_index)-1) {
		return "DeviceType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DeviceType_name[_DeviceType_index[i]:_DeviceType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[BrowserUnknown-0]
	_ = x[BrowserChrome-1]
	_ = x[BrowserChromium-2]
	_ = x[BrowserIE-3]
	_ = x[BrowserEdge-4]
	_ = x[BrowserSafari-5]
	_ = x[BrowserFirefox-6]
	_ = x[BrowserAndroid-7]
	_ = x[BrowserOpera-8]
	_ = x[BrowserUCBrowser-9]
	_ = x[BrowserQQ-10]
	_ = x[BrowserSamsung-11]
	_ = x[BrowserYandex-12]
	_ = x[BrowserCocCoc-13]
	_ = x[BrowserBot-14]
	_ = x[BrowserAppleBot-15]
	_ = x[BrowserBaiduBot-16]
	_ = x[BrowserBingBot-17]
	_ = x[BrowserDuckDuckGoBot-18]
	_ = x[BrowserFacebookBot-19]
	_ = x[BrowserGoogleBot-20]
	_ = x[BrowserLinkedInBot-21]
	_ = x[BrowserMsnBot-22]
	_ = x[BrowserPingdomBot-23]
	_ = x[BrowserTwitterBot-24]
	_ = x[BrowserYandexBot-25]
	_ = x[BrowserCocCocBot-26]
	_ = x[BrowserYahooBot-27]
}

const _BrowserName_name = "BrowserUnknownBrowserChromeBrowserChromiumBrowserIEBrowserEdgeBrowserSafariBrowserFirefoxBrowserAndroidBrowserOperaBrowserUCBrowserBrowserQQBrowserSamsungBrowserYandexBrowserCocCocBrowserBotBrowserAppleBotBrowserBaiduBotBrowserBingBotBrowserDuckDuckGoBotBrowserFacebookBotBrowserGoogleBotBrowserLinkedInBotBrowserMsnBotBrowserPingdomBotBrowserTwitterBotBrowserYandexBotBrowserCocCocBotBrowserYahooBot"

var _BrowserName_index = [...]uint16{0, 14, 27, 42, 51, 62, 75, 89, 103, 115, 131, 140, 154, 167, 180, 190, 205, 220, 234, 254, 272, 288, 306, 319, 336, 353, 369, 385, 400}

func (i BrowserName) String() string {
	if i < 0 || i >= BrowserName(len(_BrowserName_index)-1) {
		return "BrowserName(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _BrowserName_name[_BrowserName_index[i]:_BrowserName_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[OSUnknown-0]
	_ = x[OSWindows-1]
	_ = x[OSMacOS-2]
	_ = x[OSiOS-3]
	_ = x[OSAndroid-4]
	_ = x[OSChromeOS-5]
	_ = x[OSLinux-6]
	_ = x[OSBot-7]
}

const _OSName_name = "OSUnknownOSWindowsOSMacOSOSiOSOSAndroidOSChromeOSOSLinuxOSBot"

var _OSName_index = [...]uint8{0, 9, 18, 25, 30, 39, 49, 56, 61}

func (i OSName) String() string {
	if i < 0 || i >= OSName(len(_OSName_index)-1) {
		return "OSName(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _OSName_name[_OSName_index[i]:_OSName_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PlatformUnknown-0]
	_ = x[PlatformWindows-1]
	_ = x[PlatformMac-2]
	_ = x[PlatformLinux-3]
	_ = x[PlatformiPad-4]
	_ = x[PlatformiPhone-5]
	_ = x[PlatformiPod-6]
	_ = x[PlatformBot-7]
}

const _Platform_name = "PlatformUnknownPlatformWindowsPlatformMacPlatformLinuxPlatformiPadPlatformiPhonePlatformiPodPlatformBot"

var _Platform_index = [...]uint8{0, 15, 30, 41, 54, 66, 80, 92, 103}

func (i Platform) String() string {
	if i < 0 || i >= Platform(len(_Platform_index)-1) {
		return "Platform(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Platform_name[_Platform_index[i]:_Platform_index[i+1]]
}
